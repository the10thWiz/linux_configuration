#!/bin/bash

# Script to apply `bin` configs to the system

# Make git-ignored dirs
mkdir -p ~/bin/install/

# Check for rust installation
if type rustup
then
	rustup update
else
	curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   rustup update
fi
rustup completions bash rustup | sudo tee /etc/bash_completion.d/rustup.sh
rustup completions bash cargo | sudo tee /etc/bash_completion.d/cargo.sh

function rust-git-install() {
	# Clone/pull
	if [ ! -d ~/bin/install/$2/ ]; then
		git clone https://github.com/$1/$2 ~/bin/install/$2/
	else
		cd ~/bin/install/$2
		git pull
	fi
	# Build
	cd ~/bin/install/$2
	cargo build --release
}

rust-git-install TomasTomecek pretty-git-prompt 
rust-git-install the10thwiz arg-adjuster

mkdir -p ~/.config
if [ -f ~/bin/config/pretty-git-prompt.yml ]
then
	ln -sf ~/bin/config/pretty-git-prompt.yml ~/.config/pretty-git-prompt.yml
fi

function link() {
	if [ -f ~/bin/$1 ]
	then
		ln -sf ~/bin/$1 $2
	fi
}

# Link rc files to where they belong
link config/bashrc ~/.bashrc
link config/Xmodmap ~/.Xmodmap
link config/init.vim ~/.config/nvim/init.vim
link config/kitty.conf ~/.config/kitty/kitty.conf

# Apply Git config options
if type nvim
then
	git config --global core.editor "nvim"
fi
git config --global user.name "Matthew Pomes"
git config --global user.email "the10thwiz@gmail.com"
git config --global pull.ff only

# install vscode extensions
#bash ~/bin/util/vscode

