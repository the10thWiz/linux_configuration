#!/bin/zsh
path() {
  if [[ "$1" == "PATH" ]]
  then
    [[ -d "$2" ]] && export PATH=$PATH:$2
  elif [[ "$2" == "PATH" ]]
  then
    [[ -d "$1" ]] && export PATH=$1:$PATH
  else
    echo "SYNTAX ERROR: $@"
  fi
}

fpath+="$HOME/bin/install/completions"
fpath+=~/.zfunc

# The following lines were added by compinstall

zstyle ':completion:*' auto-description ': %d'
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent ..
zstyle ':completion:*' insert-unambiguous true
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-]=** r:|=** l:|=*'
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' use-compctl true
zstyle :compinstall filename '/home/matthew/bin/zsh_alt/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob notify
bindkey -v
# End of lines configured by zsh-newuser-install


### Aliases and useful commands
source $HOME/bin/config/zsh-aliases
source $HOME/bin/config/venv_activate

### VI mode
source $HOME/bin/config/zsh-vi-mode.zsh

ZVM_INDICATOR='λ'
function zvm_after_select_vi_mode() {
  case $ZVM_MODE in
    $ZVM_MODE_NORMAL)
      ZVM_INDICATOR='ᐅ'
    ;;
    $ZVM_MODE_INSERT)
      ZVM_INDICATOR='λ'
    ;;
    $ZVM_MODE_VISUAL)
      zvm_indicator='λ'
    ;;
    $ZVM_MODE_VISUAL_LINE)
      zvm_indicator='λ'
    ;;
    $ZVM_MODE_REPLACE)
      zvm_indicator='λ'
    ;;
  esac
}

### Better up/down
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
zvm_bindkey viins "^[[A" up-line-or-beginning-search
zvm_bindkey viins "^[[B" down-line-or-beginning-search
zvm_bindkey vicmd "^[[A" up-line-or-beginning-search
zvm_bindkey vicmd "^[[B" down-line-or-beginning-search

source $HOME/bin/config/zsh-bar.zsh

### Keep and Share history
setopt inc_append_history share_history

# Attempt to avoid gnome askpass
unset SSH_ASKPASS
# Enable agent
#alias echo=true
type ssh-agent > /dev/null && eval $(ssh-agent -s) > /dev/null
#unalias echo

# Setup kitty if available
if type kitty > /dev/null
then
  kitty + complete setup zsh | source /dev/stdin
fi

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_DEFAULT_OPTs='--height 60% --layout reverse'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Auto jump setup
#source /usr/share/autojump/autojump.sh

### Editor configuration
if [[ -z $NVIM ]]
then
  export EDITOR=$(which nvim)
  export SUDO_EDITOR="$EDITOR"
  export VISUAL="$EDITOR"
else
  export EDITOR="$(which nvr) -cc 'ToggleTermCloseAll'"
  export SUDO_EDITOR="$EDITOR"
  export VISUAL="$EDITOR"
  alias vi="$EDITOR"
fi

# Install Ruby Gems to ~/gems
export GEM_HOME="$HOME/gems"

# Root for SAGE install
export SAGE_ROOT=$HOME/SageMath
# SageTex location
export TEXINPUTS="$SAGE_ROOT/local/share/texmf//:"

# make GPG work
export GPG_TTY=$(tty)

# Add locations to path as needed
path $HOME/gems/bin/ PATH
path /usr/local/lib/nodejs/nodejs/node-v14.17.3-linux-x64/bin PATH
path $HOME/.cargo/bin PATH
path $HOME/.local/bin PATH
path PATH /opt/gradle/gradle-7.3.3/bin
path PATH $SAGE_ROOT/local/bin
path PATH $HOME/go/bin/

# Machine-specific configuration
if [[ -f "$HOME/.zshlocal" ]]
then
  source "$HOME/.zshlocal"
fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

fpath+=$HOME/conda-zsh-completion
compinit conda

echo $PATH > ~/.cache/nvim/path

alias fixmodmap="xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'"

PS2="    >"
